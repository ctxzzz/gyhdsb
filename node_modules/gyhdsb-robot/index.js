const cron = require('node-cron');
const axios = require('axios');
const lunarCalendar = require('lunar-calendar');

class GYHDSB {
  constructor(config) {
    this.config = config;
    this.locations = config.locations;
    this.qweatherKey = config.qweatherKey;
    this.webhookUrl = config.webhookUrl;
    this.cron = config.cron;
    this.result = [];
  }
  run() {
    const crontab = this.cron || '0 8 * * *';
    cron.schedule(crontab, this.dailyTask);
  }
  test() {
    this.dailyTask()
  }
  dailyTask() {
    const contentArr = [];
    const date = new Date();
    const today = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;
    this.#processArray(this.locations).then(() => {
      this.result.forEach((item) => {
        contentArr.push(`
📍${item.name}:
   · 今日气温${item.tempMin} ~ ${item.tempMax}℃ ${item.textDay} 
   . 日出 ${item.sunrise} 日落 ${item.sunset}
   · 今日风况 ${item.windDirDay} ${item.windScaleDay}级
           [点击查看详情](https://www.qweather.com/weather/${item.name}-${item.location}.html)  



                         ${today}
                       农历${item.lunarDate.lunarMonthName} ${item.lunarDate.lunarDayName} `)
      })
      
      const content = `
        Dear all😘
  
  
        ${contentArr.join('\n\n\n')}
  
        @所有人 
      `
  
      axios.post(this.webhookUrl, {
        msgtype: 'markdown',
        markdown: {
          content
        },
      });
    });
  }

  async #processArray(array) {
    for (let item of array) {
      await this.#processItem(item);
    }
  }

  async #processItem(item) {
    // 模拟异步操作，比如一个 API 请求
    return new Promise((resolve) =>
      axios
        .get(
          `https://devapi.qweather.com/v7/weather/3d?location=${item.location}&key=${this.qweatherKey}`
        )
        .then((res) => {
          const data = res.data.daily[0];
          // 假设有两个日期字符串
          const date = new Date();
          data.name = item.name;
          data.location = item.location;
          data.lunarDate = lunarCalendar.solarToLunar(
            date.getFullYear(),
            date.getMonth() + 1,
            date.getDate()
          );
          this.result.push(data);
          resolve();
          
        })
    );
  }
}

module.exports = GYHDSB;
